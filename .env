# 🐾 Kaizoo — Mexa-se. Evolua. Divirta-se!

Kaizoo é um app de fitness gamificado que transforma seus treinos numa jornada leve e divertida.  
Cuide de mascotes, complete desafios e construa hábitos com evolução contínua.

- **Web (Expo Web/Vercel):** https://kaizoo-mobile.vercel.app/  
- **Backend (Render):** https://kaizoo-backend.onrender.com
- **Database:** PostgreSQL serverless na **Neon** (gerenciado via Prisma Migrate)

---

## 🧭 Contexto

Ter constância é o maior desafio de quem quer se movimentar. Apps focados em performance afastam iniciantes.  
O Kaizoo nasce para incentivar **pequenos passos diários** — com leveza, mascotes e recompensas simbólicas.

---

## 🚀 Proposta

Inspirado em **Kaizen** (melhoria contínua), o Kaizoo celebra o progresso diário com:
- Mascotes evolutivos
- Desafios curtos e personalizados
- Recompensas simbólicas e feedback visual

---

## 📊 Pesquisa (resumo)

- **70%** têm dificuldade em manter motivação  
- **85%** ficariam mais motivados com gamificação  
- **55%** abandonaram apps por tédio

> Demanda por algo **leve, visual e acolhedor**.

---

## 🎯 Público-alvo

Pessoas 25–35 anos, rotina corrida, querem saúde/bem-estar, buscam **constância sem pressão**.

---

## 👤 Persona

**Juliana, 27**, analista de marketing, mãe, rotina intensa. Quer treinos curtos, visuais e recompensas que motivem.
> “Quero me exercitar, mas preciso de uma ajudinha para não desistir.”

---

## ⚙️ Funcionalidades

- [x] Onboarding  
- [x] Autenticação (register/login, JWT)  
- [x] Escolha do mascote  
- [x] Registro de atividades  
- [x] Progresso & conquistas  
- [x] Comunidade / eventos

---

## 🎨 Identidade

Cartoon leve, cores suaves, **mascotes** como elo emocional. UI modular (cards/bento), foco em legibilidade e acessibilidade.

---

## 🛠️ Stack

**Frontend**
- React Native + **Expo** + **expo-router**
- AsyncStorage (sessão), Axios, Atomic Design (`src/theme`, atoms/molecules/…)
- Deploy web: **Vercel** via `expo export --platform web`

**Backend**
- Node.js + Express + Prisma
- PostgreSQL (Neon)
- JWT (access + refresh)
- Deploy: **Render**

---

## 🔐 Variáveis de ambiente

### Frontend (.env)
```env
# URL do backend para o app/web
EXPO_PUBLIC_API_URL=https://kaizoo-backend.onrender.com
```

### Backend (.env)
```env
DATABASE_URL="postgresql://USUARIO:SENHA@HOST/neondb?sslmode=require&channel_binding=require"
JWT_ACCESS_SECRET="sua_chave_super_secreta"
JWT_REFRESH_SECRET="sua_chave_refresh_super_secreta"
ACCESS_TOKEN_TTL="15m"
REFRESH_TOKEN_TTL="30d"
```

---

## ▶️ Como rodar localmente

### 1) Backend
```bash
git clone https://github.com/pateihara/Kaizoo-mobile-backend
cd Kaizoo-mobile-backend
npm i
cp .env.example .env   # preencha
npx prisma migrate dev
npm run dev            # padrão: http://localhost:4000
```

### 2) Frontend (Expo)
```bash
git clone https://github.com/pateihara/Kaizoo-Mobile
cd Kaizoo-Mobile
npm i
# edite .env e aponte para o backend:
# EXPO_PUBLIC_API_URL=http://localhost:4000  (ou seu IP)

npx expo start         # escolha Android/iOS/Web
```

**Atenção ao endereço do backend (mobile):**
- **Android emulator:** `http://10.0.2.2:4000`
- **iOS simulator:** `http://127.0.0.1:4000`
- **Celular físico:** `http://SEU-IP-LOCAL:4000`

---

## 🌐 Deploy Web (Vercel)

Projeto serve **Expo Web** como estático.

**Config do projeto (Vercel → Settings → Build & Output):**
- **Framework Preset:** Other  
- **Install Command:** `npm ci`  
- **Build Command:** `npx expo export --platform web`  
- **Output Directory:** `dist`  
- **Env:** `EXPO_PUBLIC_API_URL=https://kaizoo-backend.onrender.com`

**Arquivos no repo:**
- `app.json` → `"web": { "output": "static", "bundler": "metro" }`
- `vercel.json`:
```json
{
  "rewrites": [{ "source": "/(.*)", "destination": "/index.html" }]
}
```
- `package.json`:
```json
"main": "expo-router/entry",
"engines": { "node": "20.x" }
```

**Plano B (deploy do build local):**
```bash
npx expo export --platform web
cp vercel.json dist/
npx vercel deploy dist --prod
```

---

## 🔌 Endpoints principais (backend)

- `POST /auth/register` → `{ name?, email, password }`
- `POST /auth/login`    → `{ email, password }`
- `POST /auth/refresh`  → `{ refreshToken }`
- `POST /auth/logout`
- `GET  /health`        → ping/diagnóstico
- `GET  /profile`       → perfil logado
- `POST /profile/onboarding` → `{ mascot: "tato"|"dino"|"koa"|"kaia"|"penny" }`
- `POST /profile/preferences` → quiz/preferences

> CORS no backend deve incluir o domínio do Vercel.

---

## 🧩 Estrutura (frontend)

```
app/               # rotas (expo-router)
  (auth)/          # login, register
  kaizoo/          # select (mascote), form
  (tabs)/          # navegação principal
  _layout.tsx
src/
  components/      # atoms/molecules/organisms
  contexts/        # AuthContext etc.
  lib/
    api.ts         # Axios (http), helpers e refresh token
  services/        # chamadas REST (auth, profile)
  theme/           # cores, spacing, radius
assets/            # imagens, ícones
```

---

## 🧪 Teste rápido da API pelo app

Rota de teste (opcional): `app/teste-health.tsx`
```tsx
import { http } from "@/lib/api";
import React, { useState } from "react";
import { Button, Text, View } from "react-native";

export default function TesteHealth() {
  const [out, setOut] = useState("...");
  return (
    <View style={{ padding: 24 }}>
      <Button title="Testar /health" onPress={async () => {
        try { const r = await http.get("/health"); setOut(JSON.stringify(r.data)); }
        catch (e:any) { setOut(e?.message || "falha"); }
      }}/>
      <Text style={{ marginTop: 16 }}>{out}</Text>
    </View>
  );
}
```

Abra `/teste-health` no web ou navegue até a tela no app.

## 🔗 Links
**NEGÓCIOS**
- 🎬 Vídeo Pitch: https://www.youtube.com/watch?v=YhCOFLgWKoE  
- 🎨 Marca (Canva): https://www.canva.com/design/DAGl200Eld0/vIQVUn-K3Q9dTUG8oYHVBQ/view  
- 🧪 Protótipo Figma: https://www.figma.com/proto/pVsIoJEYtDM3A3XYC5iQfM/KAIZOO---ENTERPRISE-CHALLENGE

**REPOSITÓRIOS**
- 📦 Frontend (GitHub): https://github.com/pateihara/Kaizoo-Mobile  
- 📦 Backend (GitHub): https://github.com/pateihara/Kaizoo-mobile-backend

**DEPLOY**
- 🌐 **Web (Vercel):** https://kaizoo-mobile.vercel.app/  
- 🖥️ **Backend (Render):** https://kaizoo-backend.onrender.com


---

## 👥 Equipe

- Natalia Guaita — planejamento & design  
- Patricia Eihara — planejamento & dev  
- Rafael Santos — planejamento, updates & vídeo
